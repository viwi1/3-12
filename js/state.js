/* state.js */

// Ett gemensamt objekt som lagrar v친ra variabler
const State = {
    // 游댳 Ursprungligt bolagsv칛rde (utan multipel)
    startVarde: 6855837,

    // 游댳 Husl친n
    huslan: 2020500,

    // 游댳 Exitv칛rde uppdateras efter multipel & husl친neavdrag
    exitVarde: 0,

    // 游댳 Bruttobelopp f칬r l친n (r칛knas fram i exitber칛kning.js)
    totaltBruttoF칬rL친n: 0,

    // 游댳 Exitv칛rde efter f칬rs칛ljning och beskattning
    exitVardeEfterSkatt: 0,

    // 游댳 Nettoavkastning fr친n utdelningsber칛kning
    nettoAvkastning: 0,

    // 游댳 Bruttoavkastning innan skatt
    bruttoAvkastning: 0,

    // 游댳 Totalt utdelningsbelopp efter skatt
    nettoUtdelning: 0,

    // 游댳 Inkomstbasbelopp (anv칛nds f칬r 3:12-ber칛kning)
    ibb: 80600,

    // 游댳 3:12-gr칛nsbelopp (ber칛knas som IBB * 2.75)
    get 312belopp() {
        return this.ibb * 2.75;
    },

    // 游댳 3:12-sparat belopp (default: 684166)
    312sparatbelopp: 684166,

    // 游댳 Skattesatser f칬r utdelning (l친g/h칬g beskattning)
    skattUtdelningL친g: 0.20,
    skattUtdelningH칬g: 0.50,

    // 游댳 Aktuell procentsats f칬r avkastning (kopplad till slider)
    avkastningProcent: 10
};

// Uppdaterar en enskild variabel i state
function updateState(key, value) {
    if (State.hasOwnProperty(key)) {
        State[key] = value;
    } else {
        console.warn(`丘멆잺  State-nyckeln '${key}' finns inte i State-objektet.`);
    }
}

// H칛mtar en enskild variabel ur state
function getState(key) {
    return State.hasOwnProperty(key) ? State[key] : null;
}

// Exporterar f칬r att kunna anv칛ndas i andra moduler
export { State, updateState, getState };
