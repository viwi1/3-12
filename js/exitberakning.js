import { updateState } from "./state.js";
import { formatNumber } from "./main.js";

document.addEventListener("DOMContentLoaded", () => {
    const START_VARDE = 6855837;
    const START_VARDE_DALIGT = 3000000;
    let huslan = 2020500; // Standard husl√•n, √§ndras via prompt

    const resultContainer = document.getElementById("resultF√∂rs√§ljning");
    if (!resultContainer) return;

    // üéØ Generera UI
    resultContainer.innerHTML = `
        <div class="box">
            <p><strong>Startv√§rde p√• bolaget:</strong> <span id="nuvarde"></span></p>
            <div class="checkbox-container">
                <input type="checkbox" id="daligtNuvarde">
                <label for="daligtNuvarde">3 000 000 kr</label>
            </div>
            <div class="slider-container">
                <label for="multipel">Multipel:</label>
                <input type="range" id="multipel" min="1.1" max="4" step="0.1" value="1.5">
                <span class="slider-value" id="multipelValue">1.5</span>
            </div>
            <div class="checkbox-container">
                <input type="checkbox" id="betalaHuslan" checked>
                <label for="betalaHuslan">üè° Betala av husl√•net direkt vid exit</label>
            </div>
            <p class="result-title"><strong id="exitTitle">Exitbelopp</strong></p>
            <p id="exitBelopp" style="color:green; font-weight:bold;"></p>
            <div id="huslanDetaljer"></div>
        </div>
    `;

    // üîπ H√§mta element
    const nuvardeEl        = document.getElementById("nuvarde");
    const daligtNuvardeEl  = document.getElementById("daligtNuvarde");
    const multipelEl       = document.getElementById("multipel");
    const multipelValueEl  = document.getElementById("multipelValue");
    const betalaHuslanEl   = document.getElementById("betalaHuslan");
    const exitTitleEl      = document.getElementById("exitTitle");
    const exitBeloppEl     = document.getElementById("exitBelopp");
    const huslanDetaljerEl = document.getElementById("huslanDetaljer");

    function uppdateraBer√§kningar() {
        // 1. Kolla att formatNumber verkligen finns
        if (typeof formatNumber !== "function") {
            console.error("formatNumber saknas eller importeras fel!");
            return;
        }

        // 2. L√§s av multipel och definiera skattesatser
        const multipel    = parseFloat(multipelEl.value) || 1;
        const skattL√•g    = 0.20;
        const skattH√∂g    = 0.50;
        const belopp312   = 684166;
        const betalaHuslan = betalaHuslanEl.checked;

        // 3. Startv√§rde (standard/d√•ligt)
        let startVarde = daligtNuvardeEl.checked ? START_VARDE_DALIGT : START_VARDE;
        nuvardeEl.textContent = formatNumber(startVarde);

        // 4. F√∂rs√§ljningspris och exitKapital
        let forsPris    = startVarde * multipel;
        let exitKapital = forsPris;

        // 5. R√§kna fram hur mycket som beh√∂vs f√∂r att betala husl√•n
        let nettoL√•g         = belopp312 * (1 - skattL√•g);
        let lanEfterL√•gSkatt = huslan - nettoL√•g;
        let bruttoH√∂gBehov   = lanEfterL√•gSkatt > 0 ? lanEfterL√•gSkatt / (1 - skattH√∂g) : 0;
        let totaltBruttoForLan = belopp312 + bruttoH√∂gBehov;

        // 6. Om husl√•n √§r ibockat -> dra av
        if (betalaHuslan) {
            exitKapital -= totaltBruttoForLan;
        }

        // 7. Uppdatera state
        updateState("exitVarde", exitKapital);
        updateState("betalaHuslan", betalaHuslan);

        // 8. S√§tt rubriker och belopp
        exitTitleEl.textContent = betalaHuslan
            ? "Exitbelopp efter husl√•nsbetalning üè°"
            : "Exitbelopp";
        exitBeloppEl.textContent = formatNumber(exitKapital);

        // 9. S√§tt detaljer kring husl√•net
        huslanDetaljerEl.innerHTML = betalaHuslan
            ? `
            <p>Husl√•n: <span id="huslanValue" style="cursor:pointer; text-decoration:underline;">${formatNumber(huslan)}</span></p>
            <p><strong>Bruttobelopp f√∂r l√•n:</strong> ${formatNumber(totaltBruttoForLan)}</p>
            <p>- ${formatNumber(belopp312)} (20% skatt) ‚Üí Netto: ${formatNumber(nettoL√•g)}</p>
            <p>- Resterande (50% skatt): ${formatNumber(bruttoH√∂gBehov)} ‚Üí Netto: ${formatNumber(lanEfterL√•gSkatt > 0 ? lanEfterL√•gSkatt : 0)}</p>
            `
            : "";

        // 10. Klickbar husl√•nebelopp -> popup
        const huslanValueEl = document.getElementById("huslanValue");
        if (huslanValueEl) {
            huslanValueEl.addEventListener("click", √∂ppnaHuslanPrompt);
        }
    }

    function √∂ppnaHuslanPrompt() {
        let nyttHuslan = prompt("Ange nytt husl√•nebelopp:", huslan);
        if (nyttHuslan !== null) {
            huslan = parseInt(nyttHuslan, 10) || huslan;
            uppdateraBer√§kningar();
        }
    }

    // üîÑ Event-lyssnare
    multipelEl.addEventListener("input", () => {
        multipelValueEl.textContent = parseFloat(multipelEl.value).toFixed(1);
        uppdateraBer√§kningar();
    });
    betalaHuslanEl.addEventListener("change", uppdateraBer√§kningar);
    daligtNuvardeEl.addEventListener("change", uppdateraBer√§kningar);

    // üèÅ Initiera
    multipelValueEl.textContent = multipelEl.value;
    betalaHuslanEl.checked = true;
    uppdateraBer√§kningar();
});

// ‚úÖ Exportera korrekt
export function uppdateraBer√§kningar() {}
