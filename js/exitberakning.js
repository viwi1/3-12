import { updateState } from "./state.js";
import { formatNumber } from "./main.js";

document.addEventListener("DOMContentLoaded", () => {
    const START_VARDE = 6855837;
    const START_VARDE_DALIGT = 3000000;
    let huslan = 2020500; // Standard husl√•n

    const resultContainer = document.getElementById("resultF√∂rs√§ljning");
    if (!resultContainer) return;

    // ‚úÖ Generera UI
    resultContainer.innerHTML = `
        <div class="box">
            <p><strong>Startv√§rde p√• bolaget:</strong> <span id="nuvarde"></span></p>
            <div class="checkbox-container">
                <input type="checkbox" id="daligtNuvarde">
                <label for="daligtNuvarde">3 000 000 kr</label>
            </div>
            <div class="slider-container">
                <label for="multipel">Multipel:</label>
                <input type="range" id="multipel" min="1.1" max="4" step="0.1" value="1.5">
                <span class="slider-value" id="multipelValue">1.5</span>
            </div>
            <div class="checkbox-container">
                <input type="checkbox" id="betalaHuslan" checked>
                <label for="betalaHuslan">üè° Betala av husl√•net direkt vid exit</label>
            </div>
            <p class="result-title"><strong id="exitTitle">Exitbelopp</strong></p>
            <p id="exitBelopp" style="color:green; font-weight:bold;"></p>
            <div id="huslanDetaljer"></div>
        </div>
    `;

    // üîπ H√§mta element
    const nuvardeEl        = document.getElementById("nuvarde");
    const daligtNuvardeEl  = document.getElementById("daligtNuvarde");
    const multipelEl       = document.getElementById("multipel");
    const multipelValueEl  = document.getElementById("multipelValue");
    const betalaHuslanEl   = document.getElementById("betalaHuslan");
    const exitTitleEl      = document.getElementById("exitTitle");
    const exitBeloppEl     = document.getElementById("exitBelopp");
    const huslanDetaljerEl = document.getElementById("huslanDetaljer");

    // ‚úÖ S√§tt startv√§rdet i UI direkt, innan f√∂rsta ber√§kningen
    nuvardeEl.textContent = formatNumber(START_VARDE);

    function uppdateraBer√§kningar() {
        const multipel = parseFloat(multipelEl.value) || 1;
        const skattL√•g  = 0.20;
        const skattH√∂g  = 0.50;
        const belopp312 = 684166;
        const betalaHuslan = betalaHuslanEl.checked;

        // üîπ Kolla om "D√•ligt nuv√§rde" √§r ikryssad
        let startVarde = daligtNuvardeEl.checked ? START_VARDE_DALIGT : START_VARDE;

        // üîπ Utskrift av startv√§rde i UI
        nuvardeEl.textContent = formatNumber(startVarde);

        let forsPris = startVarde * multipel;
        let exitKapital = forsPris;

        let nettoL√•g = belopp312 * (1 - skattL√•g);
        let lanEfterL√•gSkatt = huslan - nettoL√•g;
        let bruttoH√∂gBehov = lanEfterL√•gSkatt > 0 ? lanEfterL√•gSkatt / (1 - skattH√∂g) : 0;
        let totaltBruttoF√∂rL√•n = belopp312 + bruttoH√∂gBehov;

        if (betalaHuslan) {
            exitKapital -= totaltBruttoF√∂rL√•n;
        }

        updateState("exitVarde", exitKapital);
        updateState("betalaHuslan", betalaHuslan);

        exitTitleEl.textContent = betalaHuslan
            ? "Exitbelopp efter husl√•nsbetalning üè°"
            : "Exitbelopp";
        exitBeloppEl.textContent = formatNumber(exitKapital);

        huslanDetaljerEl.innerHTML = betalaHuslan
            ? `
            <p>Husl√•n: <span id="huslanValue" style="cursor:pointer; text-decoration:underline;">${formatNumber(huslan)}</span></p>
            <p><strong>Bruttobelopp f√∂r l√•n:</strong> ${formatNumber(totaltBruttoF√∂rL√•n)}</p>
            <p>- ${formatNumber(belopp312)} (20% skatt) ‚Üí Netto: ${formatNumber(nettoL√•g)}</p>
            <p>- Resterande (50% skatt): ${formatNumber(bruttoH√∂gBehov)} ‚Üí Netto: ${formatNumber(lanEfterL√•gSkatt > 0 ? lanEfterL√•gSkatt : 0)}</p>
            `
            : "";
    }

    multipelEl.addEventListener("input", () => {
        multipelValueEl.textContent = parseFloat(multipelEl.value).toFixed(1);
        uppdateraBer√§kningar();
    });

    betalaHuslanEl.addEventListener("change", uppdateraBer√§kningar);
    daligtNuvardeEl.addEventListener("change", uppdateraBer√§kningar);

    // üèÅ Initiera ber√§kning vid sidladdning
    betalaHuslanEl.checked = true;
    uppdateraBer√§kningar();
});

// ‚úÖ Exporterar funktionen
export function uppdateraBer√§kningar() {}
