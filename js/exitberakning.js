import { updateState, getState } from "./state.js";
import { formatNumber } from "./main.js"; // ‚úÖ F√∂r att kunna formatera siffror

function uppdateraBer√§kningar() {
    // 1Ô∏è‚É£ H√§mta multipel och startv√§rde fr√•n state.js
    let multipel = parseFloat(document.getElementById("multipel").value) || 1;
    let startVarde = getState("startVarde") || 0; // ‚ùó Kolla att detta inte √§r 0 eller null

    // 2Ô∏è‚É£ H√§mta husl√•n och kolla om checkboxen √§r markerad
    let huslan = getState("huslan") || 0;
    let betalaHuslan = document.getElementById("betalaHuslan").checked;

    // 3Ô∏è‚É£ Ber√§kna f√∂rs√§ljningspris baserat p√• multipel
    let forsaljningspris = startVarde * multipel;
    console.log("üîé F√∂rs√§ljningspris (startVarde * multipel):", forsaljningspris);

    // ‚úÖ Initialt √§r exitKapital = f√∂rs√§ljningspris (utan husl√•neavdrag)
    let exitKapital = forsaljningspris;

    // 4Ô∏è‚É£ Skattesatser och 3:12-gr√§nsv√§rde
    let skattL√•g = 0.20;
    let skattH√∂g = 0.50;
    let gransvarde312 = 684166; // üéØ Anv√§ndbart gr√§nsv√§rde f√∂r l√•gbeskattad utdelning

    // 5Ô∏è‚É£ R√§kna ut hur mycket som beh√∂vs f√∂r att betala husl√•n med 3:12-optimering
    let nettoL√•g = gransvarde312 * (1 - skattL√•g);  
    let lanEfterLagSkatt = huslan - nettoL√•g; // üîπ Kvarvarande belopp efter l√•g skatt

    // üîπ Om husl√•net √§r h√∂gre √§n vad som kan beskattas l√•gt:
    let bruttoH√∂gBehov = lanEfterLagSkatt > 0 ? lanEfterLagSkatt / (1 - skattH√∂g) : 0;
    let totaltBruttoF√∂rL√•n = gransvarde312 + bruttoH√∂gBehov;  

    // 6Ô∏è‚É£ Endast om checkboxen √§r ibockad, dra av fr√•n exitKapital
    if (betalaHuslan) {
        exitKapital -= totaltBruttoF√∂rL√•n;
        console.log("‚úÖ Husl√•n betalas; nytt exitKapital:", exitKapital);
    }

    // 7Ô∏è‚É£ S√§kerhetskontroll: Om exitKapital blir negativt, s√§tt det till 0
    if (exitKapital < 0) {
        console.warn("üö® Varning: exitKapital blev negativt. Justeras till 0.");
        exitKapital = 0;
    }

    // 8Ô∏è‚É£ Uppdatera state med nya exitKapitalet
    updateState("exitVarde", exitKapital);
    console.log("üöÄ exitVarde uppdaterat i state:", exitKapital);

    // 9Ô∏è‚É£ Uppdatera HTML med resultaten
    document.getElementById("resultF√∂rs√§ljning").innerHTML = `
        <div class="box">
            <p class="result-title">${betalaHuslan ? "Exitbelopp efter husl√•nsbetalning üè°" : "Exitbelopp"}</p>
            <p><strong>${formatNumber(exitKapital)}</strong></p>
            ${betalaHuslan ? `
            <p><strong>Husl√•n:</strong> ${formatNumber(huslan)}</p>
            <p><strong>Bruttobelopp f√∂r l√•n:</strong> ${formatNumber(totaltBruttoF√∂rL√•n)}</p>
            <p>- ${formatNumber(gransvarde312)} (20% skatt) ‚Üí Netto: ${formatNumber(nettoL√•g)}</p>
            <p>- Resterande (50% skatt): ${formatNumber(bruttoH√∂gBehov)} ‚Üí Netto: ${formatNumber(lanEfterLagSkatt > 0 ? lanEfterLagSkatt : 0)}</p>
            <p><strong>Totalt netto anv√§nt f√∂r l√•n:</strong> ${formatNumber(huslan)}</p>
            ` : ""}
        </div>
    `;
}

// üèÅ ‚è∞ K√∂r funktionen vid sidladdning och n√§r multipeln/husl√•necheckboxen √§ndras
document.addEventListener("DOMContentLoaded", function () {
    uppdateraBer√§kningar();

    // üîÑ Event: multipel-slider √§ndras
    document.getElementById("multipel").addEventListener("input", () => {
        console.log("‚ö° Multipel √§ndrad, uppdaterar exitber√§kning...");
        uppdateraBer√§kningar();
    });

    // üîÑ Event: husl√•necheckbox √§ndras
    document.getElementById("betalaHuslan").addEventListener("change", () => {
        console.log("‚ö° Husl√•n-checkbox √§ndrad, uppdaterar exitber√§kning...");
        uppdateraBer√§kningar();
    });
});

export { uppdateraBer√§kningar };
